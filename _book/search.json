[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "R for Data Analysis",
    "section": "",
    "text": "install-r-5 is duplicated need better images\n\n“There is synthesis when, in combining therein judgments that are made known to us from simpler relations, one deduces judgments from them relative to more complicated relations. There is analysis when from a complicated truth one deduces more simple truths.”  -André-Marie Ampère (Hofmann 1996)\n\nEveryone is a data analyst. The purpose of this book is to inspire and enable anyone who reads it to reconsider the methods they currently employ to analyse data. This is not to suggest that the methodologies outlined will be useful or sufficient for everyone who reads it. Some analyses can be performed quickly without the need for additional computation while others will require advanced analytics techniques not outlined in this book; however, the aspiration is that all will be equipped with novel tools and ideas for approaching data analysis.\n\n\nNo prior knowledge is required to begin this book. The content will start at the very beginning by showing you how to set up your R environment and the basics of programming in R. By the end of the book, you will be able to perform intermediate analytics techniques such as linear regresion and automatic report generation.\nYou will need an environment which you use to run your code. It is recommended that you download R and R Studio locally for this requirement. This book will walk you through how to do that as well as offer alternatives if that is not an option for you.\n\n\n\n\nPart I (Fundamentals) will introduce you to the basics of programming in the context of R.\nPart II (Data Acquisition) will teach you how to create, import, and access data.\nPart III (Data Preparation) will show you how to begin preparing your data for analysis.\nPart IV (Developing Insights) goes through the process of searching for and extracting insights from your data.\nPart V (Reporting) demonstrates how to wrap your analysis up by developing and automating reports.\n\nEach part will be concluded with practical exercises for you to test your skills.\n\n\n\n\nHofmann, J. R. 1996. Enlightenment and Electrodynamics. Cambridge University Press."
  },
  {
    "objectID": "intro.html",
    "href": "intro.html",
    "title": "Introduction",
    "section": "",
    "text": "No prior knowledge is required to begin this book. The content will start at the very beginning by showing you how to set up your R environment and the basics of programming in R. By the end of the book, you will be able to perform intermediate analytics techniques such as linear regresion and automatic report generation."
  },
  {
    "objectID": "summary.html",
    "href": "summary.html",
    "title": "3  Summary",
    "section": "",
    "text": "In summary, this book has no content whatsoever."
  },
  {
    "objectID": "references.html",
    "href": "references.html",
    "title": "References",
    "section": "",
    "text": "Eremenko, Kirill. 2020. “Hadley Wickham Talks Integration and\nFuture of r and Python [Audio Podcast].” SuperDataScience. https://www.superdatascience.com/podcast/hadley-wickham-talks-integration-and-future-of-python-and-r.\n\n\nHermans, Felienne. 2021. “Hadley Wickham on r and Tidyverse [Audio\nPodcast].” Software Engineering Radio. https://www.se-radio.net/2021/03/episode-450-hadley-wickham-on-r-and-tidyverse/.\n\n\nHofmann, J. R. 1996. Enlightenment and Electrodynamics.\nCambridge University Press."
  },
  {
    "objectID": "1-what.html#history",
    "href": "1-what.html#history",
    "title": "1  What is R?",
    "section": "1.2 History",
    "text": "1.2 History"
  },
  {
    "objectID": "1-what.html#r-vs.-python",
    "href": "1-what.html#r-vs.-python",
    "title": "1  What is R?",
    "section": "1.3 R vs. Python",
    "text": "1.3 R vs. Python"
  },
  {
    "objectID": "what-is-r.html#history",
    "href": "what-is-r.html#history",
    "title": "1  What is R?",
    "section": "1.2 History",
    "text": "1.2 History"
  },
  {
    "objectID": "what-is-r.html#r-vs.-python",
    "href": "what-is-r.html#r-vs.-python",
    "title": "1  What is R?",
    "section": "1.3 R vs. Python",
    "text": "1.3 R vs. Python"
  },
  {
    "objectID": "setup.html#alternatives",
    "href": "setup.html#alternatives",
    "title": "3  Setup",
    "section": "3.3 Alternatives",
    "text": "3.3 Alternatives\n\n3.3.1 R Studio Cloud\n\n\n3.3.2 Replit\n\n\n3.3.3 Kaggle\n\n\n3.3.4 Deepnote\n\n\n3.3.5 Custom Text Editor"
  },
  {
    "objectID": "setup.html",
    "href": "setup.html",
    "title": "3  Setup",
    "section": "",
    "text": "Before you do anything, you’ll need to download R. This download will allow your computer to interpret the R code you write later on.\n\nDownload R From R: The R Project for Statistical Computing\nSelect ‘download R’\n\n\n\nChoose any link but preferably the one closest to your physical location\n\n\n\nChoose your operating system\n\n\n\nPress ‘Install R for the first time’\n\n\n\nPress ‘download’\n\n\n\nOpen installer\n\n\n\nFollow the prompts and leave all options set as their default values"
  },
  {
    "objectID": "setup.html#install-r-studio",
    "href": "setup.html#install-r-studio",
    "title": "3  Setup",
    "section": "3.2 Install R Studio",
    "text": "3.2 Install R Studio\nAfter you install R, you’ll need an environment to write and run your code in. Most people use a program called “R Studio” for this. To download R Studio follow the steps listed below:\n\nNavigate to the R Studio download site: Download the RStudio IDE\nPress the ‘download’ button under RStudio Desktop\n\n\n\nChoose the download option for your operating system\n\n\n\nOpen the installer and accept all defaults"
  },
  {
    "objectID": "what-is-r.html",
    "href": "what-is-r.html",
    "title": "1  What is R?",
    "section": "",
    "text": "R is a statistical programming language used commonly for data analysis amongst other disciplines. It was built by Ross Ihaka and Robert Gentleman at the University of Auckland and was first released in 1993."
  },
  {
    "objectID": "r-studio.html#source",
    "href": "r-studio.html#source",
    "title": "5  Getting Familiar with R Studio",
    "section": "5.2 Source",
    "text": "5.2 Source"
  },
  {
    "objectID": "r-studio.html#console",
    "href": "r-studio.html#console",
    "title": "5  Getting Familiar with R Studio",
    "section": "5.3 Console",
    "text": "5.3 Console"
  },
  {
    "objectID": "r-studio.html#environment",
    "href": "r-studio.html#environment",
    "title": "5  Getting Familiar with R Studio",
    "section": "5.4 Environment",
    "text": "5.4 Environment"
  },
  {
    "objectID": "r-studio.html#files",
    "href": "r-studio.html#files",
    "title": "5  Getting Familiar with R Studio",
    "section": "5.5 Files",
    "text": "5.5 Files"
  },
  {
    "objectID": "executing-code.html#scripts",
    "href": "executing-code.html#scripts",
    "title": "6  Executing Code",
    "section": "6.2 Scripts",
    "text": "6.2 Scripts"
  },
  {
    "objectID": "data-structures.html",
    "href": "data-structures.html",
    "title": "14  Data Structures",
    "section": "",
    "text": "R and its libraries implement various statistical techniques, including linear, generalized linear and nonlinear modeling, classical statistical tests, spatial and time-series analysis, classification, clustering, and others. For computationally intensive tasks, C, C++, and Fortran code can be linked and called at run time. Another of R’s strengths is static graphics; it can produce publication-quality graphs that include mathematical symbols.[31]"
  },
  {
    "objectID": "p1-introduction.html",
    "href": "p1-introduction.html",
    "title": "Introduction",
    "section": "",
    "text": "No prior knowledge is required to begin this book. The content will start at the very beginning by showing you how to set up your R environment and the basics of programming in R. By the end of the book, you will be able to perform intermediate analytics techniques such as linear regresion and automatic report generation."
  },
  {
    "objectID": "p1c1-what-is-r.html",
    "href": "p1c1-what-is-r.html",
    "title": "1  What is R?",
    "section": "",
    "text": "R is a statistical programming language used commonly for data analysis amongst other disciplines. It was built by Ross Ihaka and Robert Gentleman at the University of Auckland and was first released in 1993."
  },
  {
    "objectID": "p1c3-setup.html",
    "href": "p1c3-setup.html",
    "title": "3  Setup",
    "section": "",
    "text": "Before you do anything, you’ll need to download R. This download will allow your computer to interpret the R code you write later on.\n\nDownload R From R: The R Project for Statistical Computing\nSelect ‘download R’\n\n\n\nChoose any link but preferably the one closest to your physical location\n\n\n\nChoose your operating system\n\n\n\nPress ‘Install R for the first time’\n\n\n\nPress ‘download’\n\n\n\nOpen installer\n\n\n\nFollow the prompts and leave all options set as their default values"
  },
  {
    "objectID": "p1c3-setup.html#install-r-studio",
    "href": "p1c3-setup.html#install-r-studio",
    "title": "3  Setup",
    "section": "3.2 Install R Studio",
    "text": "3.2 Install R Studio\nAfter you install R, you’ll need an environment to write and run your code in. Most people use a program called “R Studio” for this. To download R Studio follow the steps listed below:\n\nNavigate to the R Studio download site: Download the RStudio IDE\nPress the ‘download’ button under RStudio Desktop\n\n\n\nChoose the download option for your operating system\n\n\n\nOpen the installer and accept all defaults"
  },
  {
    "objectID": "p1c3-setup.html#alternatives",
    "href": "p1c3-setup.html#alternatives",
    "title": "3  Setup",
    "section": "3.3 Alternatives",
    "text": "3.3 Alternatives\n\n3.3.1 R Studio Cloud\n\n\n3.3.2 Replit\n\n\n3.3.3 Kaggle\n\n\n3.3.4 Deepnote\n\n\n3.3.5 Custom Text Editor"
  },
  {
    "objectID": "p2c1-r-studio.html#source",
    "href": "p2c1-r-studio.html#source",
    "title": "4  Getting Familiar with R Studio",
    "section": "4.2 Source",
    "text": "4.2 Source"
  },
  {
    "objectID": "p2c1-r-studio.html#console",
    "href": "p2c1-r-studio.html#console",
    "title": "4  Getting Familiar with R Studio",
    "section": "4.3 Console",
    "text": "4.3 Console"
  },
  {
    "objectID": "p2c1-r-studio.html#environment",
    "href": "p2c1-r-studio.html#environment",
    "title": "4  Getting Familiar with R Studio",
    "section": "4.4 Environment",
    "text": "4.4 Environment"
  },
  {
    "objectID": "p2c1-r-studio.html#files",
    "href": "p2c1-r-studio.html#files",
    "title": "4  Getting Familiar with R Studio",
    "section": "4.5 Files",
    "text": "4.5 Files"
  },
  {
    "objectID": "p2c2-programming-basics.html#executing-code",
    "href": "p2c2-programming-basics.html#executing-code",
    "title": "5  Programming Basics",
    "section": "5.2 Executing Code",
    "text": "5.2 Executing Code"
  },
  {
    "objectID": "p2c2-programming-basics.html#variables",
    "href": "p2c2-programming-basics.html#variables",
    "title": "5  Programming Basics",
    "section": "5.3 Variables",
    "text": "5.3 Variables"
  },
  {
    "objectID": "p2c2-programming-basics.html#operators",
    "href": "p2c2-programming-basics.html#operators",
    "title": "5  Programming Basics",
    "section": "5.4 Operators",
    "text": "5.4 Operators"
  },
  {
    "objectID": "p2c2-programming-basics.html#functions",
    "href": "p2c2-programming-basics.html#functions",
    "title": "5  Programming Basics",
    "section": "5.5 Functions",
    "text": "5.5 Functions"
  },
  {
    "objectID": "p2c2-programming-basics.html#loops",
    "href": "p2c2-programming-basics.html#loops",
    "title": "5  Programming Basics",
    "section": "5.6 Loops",
    "text": "5.6 Loops"
  },
  {
    "objectID": "p2c2-programming-basics.html#conditionals",
    "href": "p2c2-programming-basics.html#conditionals",
    "title": "5  Programming Basics",
    "section": "5.7 Conditionals",
    "text": "5.7 Conditionals"
  },
  {
    "objectID": "p2c2-programming-basics.html#libraries",
    "href": "p2c2-programming-basics.html#libraries",
    "title": "5  Programming Basics",
    "section": "5.8 Libraries",
    "text": "5.8 Libraries"
  },
  {
    "objectID": "p2c4-data-structures.html",
    "href": "p2c4-data-structures.html",
    "title": "7  Data Structures",
    "section": "",
    "text": "R and its libraries implement various statistical techniques, including linear, generalized linear and nonlinear modeling, classical statistical tests, spatial and time-series analysis, classification, clustering, and others. For computationally intensive tasks, C, C++, and Fortran code can be linked and called at run time. Another of R’s strengths is static graphics; it can produce publication-quality graphs that include mathematical symbols.[31]"
  },
  {
    "objectID": "p0c1-what-is-r.html",
    "href": "p0c1-what-is-r.html",
    "title": "1  What is R?",
    "section": "",
    "text": "R was a programming language that was designed specifically for the needs of statistics and data analysis.  -Hadley Wickham (Hermans 2021)\nR is a statistical programming language used commonly for data analysis amongst other disciplines. It was built by Ross Ihaka and Robert Gentleman at the University of Auckland and was first released in 1993."
  },
  {
    "objectID": "p0c3-setup.html",
    "href": "p0c3-setup.html",
    "title": "3  Setup",
    "section": "",
    "text": "Before you do anything, you’ll need to download R. This download will allow your computer to interpret the R code you write later on.\n\nDownload R From R: The R Project for Statistical Computing\nSelect ‘download R’\n\n\n\n\n\n\n\nChoose any link but preferably the one closest to your physical location\n\n\n\n\n\n\n\nChoose your operating system\n\n\n\n\n\n\n\nPress ‘Install R for the first time’\n\n\n\n\n\n\n\nPress ‘download’\n\n\n\n\n\n\n\nOpen installer\n\n\n\n\n\n\n\nFollow the prompts and leave all options set as their default values"
  },
  {
    "objectID": "p0c3-setup.html#install-r-studio",
    "href": "p0c3-setup.html#install-r-studio",
    "title": "3  Setup",
    "section": "3.2 Install R Studio",
    "text": "3.2 Install R Studio\nAfter you install R, you’ll need an environment to write and run your code in. Most people use a program called “R Studio” for this. To download R Studio follow the steps listed below:\n\nNavigate to the R Studio download site: Download the RStudio IDE\nPress the ‘download’ button under RStudio Desktop\n\n\n\n\n\n\n\nChoose the download option for your operating system\n\n\n\n\n\n\n\nOpen the installer and accept all defaults"
  },
  {
    "objectID": "p0c3-setup.html#alternatives",
    "href": "p0c3-setup.html#alternatives",
    "title": "3  Setup",
    "section": "3.3 Alternatives",
    "text": "3.3 Alternatives\n\n3.3.1 R Studio Cloud\nR Studio Cloud offers users a way to replicate the full R Studio experience without having to download or set anything up on your personal computer. You can sign up for a free account here: \n\n\n\n\n\n\n\n3.3.2 Replit\nReplit allows users to code in 50+ languages in the browser. While you won’t be able to follow along with the R Studio specific examples, you will be able to run R code. You can sign up for a free account here: \n\n\n\n\n\n\n\n3.3.3 Kaggle\nKaggle is one of the most popular sites for data analysts to compete in data competitions, find data, and discuss data topics. They also have a feature that allows you to write and run R (and Python) code. You can sign up for a free account here:"
  },
  {
    "objectID": "p1c1-r-studio.html#source",
    "href": "p1c1-r-studio.html#source",
    "title": "4  Getting Familiar with R Studio",
    "section": "4.2 Source",
    "text": "4.2 Source"
  },
  {
    "objectID": "p1c1-r-studio.html#console",
    "href": "p1c1-r-studio.html#console",
    "title": "4  Getting Familiar with R Studio",
    "section": "4.3 Console",
    "text": "4.3 Console\nThe console pane is the bottom left pane in R Studio. This pane has three tabs: “Console”, “Terminal”, and “Background Jobs”.\n\nThe “Console” tab is where you will be able to run R code directly without writing a script (this will be covered in the next chapter).\nThe “Terminal” tab is the same terminal you have on your computer. This can be adjusted in the global options.\nThe “Background Jobs” tab is where you can start and manage processes that need to run behind the scenes."
  },
  {
    "objectID": "p1c1-r-studio.html#environment",
    "href": "p1c1-r-studio.html#environment",
    "title": "4  Getting Familiar with R Studio",
    "section": "4.4 Environment",
    "text": "4.4 Environment\nThe environment pane is the top right pane in R Studio. This is where you will manage all things related to your development environment."
  },
  {
    "objectID": "p1c1-r-studio.html#files",
    "href": "p1c1-r-studio.html#files",
    "title": "4  Getting Familiar with R Studio",
    "section": "4.5 Files",
    "text": "4.5 Files\nThe files pane is the bottom right pane in R Studio."
  },
  {
    "objectID": "p1c2-programming-basics.html#executing-code",
    "href": "p1c2-programming-basics.html#executing-code",
    "title": "5  Programming Basics",
    "section": "5.2 Executing Code",
    "text": "5.2 Executing Code"
  },
  {
    "objectID": "p1c2-programming-basics.html#variables",
    "href": "p1c2-programming-basics.html#variables",
    "title": "5  Programming Basics",
    "section": "5.3 Variables",
    "text": "5.3 Variables"
  },
  {
    "objectID": "p1c2-programming-basics.html#operators",
    "href": "p1c2-programming-basics.html#operators",
    "title": "5  Programming Basics",
    "section": "5.4 Operators",
    "text": "5.4 Operators"
  },
  {
    "objectID": "p1c2-programming-basics.html#functions",
    "href": "p1c2-programming-basics.html#functions",
    "title": "5  Programming Basics",
    "section": "5.5 Functions",
    "text": "5.5 Functions"
  },
  {
    "objectID": "p1c2-programming-basics.html#loops",
    "href": "p1c2-programming-basics.html#loops",
    "title": "5  Programming Basics",
    "section": "5.6 Loops",
    "text": "5.6 Loops"
  },
  {
    "objectID": "p1c2-programming-basics.html#conditionals",
    "href": "p1c2-programming-basics.html#conditionals",
    "title": "5  Programming Basics",
    "section": "5.7 Conditionals",
    "text": "5.7 Conditionals"
  },
  {
    "objectID": "p1c2-programming-basics.html#libraries",
    "href": "p1c2-programming-basics.html#libraries",
    "title": "5  Programming Basics",
    "section": "5.8 Libraries",
    "text": "5.8 Libraries"
  },
  {
    "objectID": "p1c4-data-structures.html",
    "href": "p1c4-data-structures.html",
    "title": "7  Data Structures",
    "section": "",
    "text": "R and its libraries implement various statistical techniques, including linear, generalized linear and nonlinear modeling, classical statistical tests, spatial and time-series analysis, classification, clustering, and others. For computationally intensive tasks, C, C++, and Fortran code can be linked and called at run time. Another of R’s strengths is static graphics; it can produce publication-quality graphs that include mathematical symbols.[31]"
  },
  {
    "objectID": "p0c2-what-is-data-analysis.html",
    "href": "p0c2-what-is-data-analysis.html",
    "title": "2  What is Data Analysis",
    "section": "",
    "text": "I mean my definition is data science is like data analysis by programming. Which of course begs the question of what data analysis is, and so I think of data analysis as really any activity where the input is data and the output is understanding or knowledge or insights. So I think of that pretty broadly. And then to do data science you’re not doing it by pointing and clicking. You’re doing it by writing some code in a programming language.  -Hadley Wickham (Eremenko 2020)\nData analysis at it’s most simple form is the process of searching for meaning in data with the ultimate goal being to draw insight from that meaning."
  },
  {
    "objectID": "p1c2-programming-basics.html",
    "href": "p1c2-programming-basics.html",
    "title": "5  Programming Basics",
    "section": "",
    "text": "run selections rather than scripts\nWhen working in most programming languages, you will generally have the option to execute code one of two ways:\n\nin the console\nin a script\n\n\n\nThe first way to run code is directly in the console. If you’re working in R Studio, you will access the console through the “console” pane (usually located in the bottom left portion).\nPictured here.\nAlternatively, if you downloaded R to your personal computer, you will likely be able to search your machine for an app named “RGui” and access the console this way as well.\nPictured here.\nIn the following example, the text ‘print(3+2)’ is typed into the console. The user then presses enter and sees the result: “[1] 5”.\n\nprint(3+2)\n\n[1] 5\n\n\nYou may be wondering what “[1]” represents. This is simply a line number in the console and can be ignored for most practical purposes. Additionally, most of the examples in this book will be structured in this way: formatted code immediately followed by the code output.\n\n\n\nYou likely will be using scripts most of the time when working in R. A script is just a file that allows you to type out longer sequences of code and execute them all at once.\nFor those of you following along in R Studio, you can create a script by pressing “Ctrl + Shift + N” on Windows or by selecting “R Script” from the “New File” dropdown in the top left corner.\nPictured Here.\nFrom here you can type the same command from before into the source pane.\nPictured Here.\nNow you’ll want to save your file by pressing “Ctrl + S” on Windows or by selecting “Save” from the “File” dropdown in the top left corner. Now just give your file a name and your file will automatically be saved as a “.R” file.\nPictured Here.\nFinally, select all of your code by pressing"
  },
  {
    "objectID": "p1c2-programming-basics.html#comments",
    "href": "p1c2-programming-basics.html#comments",
    "title": "5  Programming Basics",
    "section": "5.2 Comments",
    "text": "5.2 Comments\n\n5.2.1 bulk, single, uncomment, best practices, print, view??"
  },
  {
    "objectID": "p0c1-what-is-r.html#history",
    "href": "p0c1-what-is-r.html#history",
    "title": "1  What is R?",
    "section": "1.1 History",
    "text": "1.1 History\nRobert Gentleman and Ross Ihaka “both had an interest in statistical computing and saw a common need for a better software environment in [their] Macintosh teaching laboratory. [They] saw no suitable commercial environment and [they] began to experiment to see what might be involved in developing one [them]selves.” (Ihaka 1998)\nWhile R was officially first released in 1993, it wasn’t until 1995 that Ross Ihaka and Robert Gentlemann were convinced by Martin Mächler to release the source code freely (Ihaka 1998)."
  },
  {
    "objectID": "p0c1-what-is-r.html#resources",
    "href": "p0c1-what-is-r.html#resources",
    "title": "1  What is R?",
    "section": "1.2 Resources",
    "text": "1.2 Resources\nYou can learn more about R at https://www.r-project.org/\nRead Ross Ihaka’s account of R’s origination here https://www.stat.auckland.ac.nz/~ihaka/downloads/Interface98.pdf\n“What is R?”” by Microsoft https://mran.microsoft.com/documents/what-is-r\nR manuals by the R Development Core Team https://cran.r-project.org/manuals.html\nR-bloggers https://www.r-bloggers.com/\nR User Groups https://www.meetup.com/pro/r-user-groups/\nR Studio Community https://community.rstudio.com/\nThe R Journal https://journal.r-project.org/\nMicrosoft R Application Network https://mran.microsoft.com/\n\n\n\n\nHermans, Felienne. 2021. “Hadley Wickham on r and Tidyverse [Audio Podcast].” Software Engineering Radio. https://www.se-radio.net/2021/03/episode-450-hadley-wickham-on-r-and-tidyverse/.\n\n\nIhaka, Ross. 1998. “R : Past and Future History.” https://www.stat.auckland.ac.nz/~ihaka/downloads/Interface98.pdf."
  },
  {
    "objectID": "p0c2-what-is-data-analysis.html#the-process-of-data-analysis",
    "href": "p0c2-what-is-data-analysis.html#the-process-of-data-analysis",
    "title": "2  What is Data Analysis",
    "section": "2.1 The Process of Data Analysis",
    "text": "2.1 The Process of Data Analysis\nThe process of data analysis can be generally described in six steps:\n\nGathering Requirements - Before one embarks on an analysis, it’s important to make sure the requirements are understood. Requirements include the questions which your stakeholders are hoping to answer as well as the technical requirements of how you are going to perform your analysis.\nData Acquisition - As you might imagine, you must acquire your data before conducting an analysis. This may be done through the methods such as manual creation of datasets, importing pre-constructed data, or leveraging APIs.\nData Preparation - Most data will not be received in the precise format you need to begin your analysis. The process of data preparation is where you will structure and add features to your data.\nDeveloping Insights - Once your data is prepared, you can now begin to make sense of your data and develop insights about it’s meaning.\nReporting - Finally, it’s important to report on your data in such a way that the information is able to be digested by the people who need to see it when they need to see it.\n\nOther sources may include additional steps such as “acting on the analysis”. While this is a critical step for organizations to capture the full value of their data, I would argue that it occurs outside of the analysis process.\nThis book will focus on the technical skills required to conduct an analysis. Because of this, we will be covering steps two through five."
  },
  {
    "objectID": "p0c2-what-is-data-analysis.html#resources",
    "href": "p0c2-what-is-data-analysis.html#resources",
    "title": "2  What is Data Analysis",
    "section": "2.2 Resources",
    "text": "2.2 Resources\nData Science & Big Data Analytics: Discovering, Analyzing, Visualizing and Presenting Data https://onlinelibrary.wiley.com/doi/book/10.1002/9781119183686\nManaging the Analytics Life Cycle for Decisions at Scale https://www.sas.com/content/dam/SAS/en_us/doc/whitepaper1/manage-analytical-life-cycle-continuous-innovation-106179.pdf\n\n\n\n\nEremenko, Kirill. 2020. “Hadley Wickham Talks Integration and Future of r and Python [Audio Podcast].” SuperDataScience. https://www.superdatascience.com/podcast/hadley-wickham-talks-integration-and-future-of-python-and-r."
  },
  {
    "objectID": "p1c1-r-studio.html",
    "href": "p1c1-r-studio.html",
    "title": "4  Getting Familiar with R Studio",
    "section": "",
    "text": "You are able to customize how your version of R Studio looks by following these steps:\n\nOpen R Studio and choose ‘tools’ from the toolbar\n\n\n\n\n\n\n\nChoose ‘Global Options’\n\n\n\n\n\n\n\nChoose ‘Appearance’ and select your favorite theme from the ‘Editor Theme’ section\n\n\n\n\n\n\n\nPress ‘Apply’\n\nThere are other customization options avaialable as well. Feel free to explore the “Global Options” section to make your version of R Studio your own."
  },
  {
    "objectID": "p1c1-r-studio.html#source-pane",
    "href": "p1c1-r-studio.html#source-pane",
    "title": "4  Getting Familiar with R Studio",
    "section": "4.2 Source Pane",
    "text": "4.2 Source Pane\nThe source pane is the top left pane in R Studio. This is where you will write and edit your code.\n\n\n\n\n\nIf you don’t see the source pane, you may need to create a new R Script by pressing “Ctrl + Shift + N” (“Cmd + Shift + N” on Mac) or by selecting “R Script” from the “New File” dropdown in the top left corner.\n\n\n\n\n\nEach element of the source pane is outlined below.\n\n\n\n\n\n\nShow in New Window- This allows you to pop the source pane into a new window by itself.\nSave Current Document- This saves the file contained in the tab you currently have active.\nSource on Save- Automatically sources your file every time you hit save. “Sourcing” is similar to “Running” in the sense that both will execute your code; however, sourcing will execute your saved file rather than sticking lines of code into the console.\nFind/Replace- this feature allows you to find and replace specified text, similar to find and replace features in other tools such as Excel.\nCode Tools- This brings up a menu of options which help you to code more efficiently. Some of these tools include formatting your code and help with function definitions.\nCompile Report- This allows you to compile a report directly from an R script without needing to use additional frameworks such as R Markdown.\nRun Current Selection- This allows you to highlight a portion of your code and run only that portion.\nRe-run Previous Code Region- This option will execute the last section of code that you ran.\nGo to Previous/Next Section/Chunk- These up and down arrows allow you to navigate through sections of your code without needing to scroll.\nSource Contents- This option will save your active document if it isn’t already saved and then source the file.\nOutline- Pressing this option will pop open an outline of your current file.\nAdjust Frame Size- These two options will adjust the size of the source pane inside of R Studio.\nSyntax Highlighting- This allows you to adjust the syntax highlighting of your active document to match the highlighting of other file types.\n“Jump To” Menu- This menu allows you to quickly jump to different sections of your code.\nCursor Position- This displays your current cursor position by row and column.\nRow Numbers- The lef-thand side of your document will display the row number for each line of your code.\nBack/Forward- These arrows are navigation tools that will allow you to redo/undo the following actions: opening a document (or switching tabs), going to a function definition, jumping to a line, and jumping to a function using the function menu (Paulson 2022).\nTab- This is a tab in the traditional sense, meaning you are able to have a collection of documents open displayed as tabs. These tabs will have the title of your document and often an icon of some sort to demonstrate the file type."
  },
  {
    "objectID": "p1c1-r-studio.html#resources",
    "href": "p1c1-r-studio.html#resources",
    "title": "4  Getting Familiar with R Studio",
    "section": "4.6 Resources",
    "text": "4.6 Resources\nThis is where the difference between sourcing and running is.\nhttps://support.rstudio.com/hc/en-us/articles/200484448-Editing-and-Executing-Code\nhttps://support.rstudio.com/hc/en-us/articles/200484568-Code-Folding-and-Sections-in-the-RStudio-IDE\n()[https://support.rstudio.com/hc/en-us/articles/200711853-Keyboard-Shortcuts-in-the-RStudio-IDE]\nBack and forward\nhttps://support.rstudio.com/hc/en-us/articles/200710523-Navigating-Code-in-the-RStudio-IDE\n\n\n\n\nPaulson, Josh. 2022. Navigating Code in the RStudio IDE. https://support.rstudio.com/hc/en-us/articles/200710523-Navigating-Code-in-the-RStudio-IDE."
  }
]