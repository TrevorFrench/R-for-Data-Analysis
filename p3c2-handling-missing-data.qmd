# Handling Missing Data

You may encounter situations while analysing data that some of your data are missing. This chapter will cover best practices in regards to handling these situations as well as the technical details on how to remedy the data. mena imput constant val whow to determine the right way to impute/drop columns

## Replacing Nulls/NAs (constant value?)
Grades makes sense to replace with 0 because student may have skipped class blah blah (constant value imputation)

Many datasets you encounter will likely be missing data. The temptation may be to immediately disregard these observations; however, it's important to consider what missing data represents in the context of your dataset as well as the context of what your analysis is hoping to achieve. For example, say you are a teacher and you are trying to determine the average test scores of your students. You have a dataset which lists your students names along with their respective test scores. However, you find that one of your students has an "NA" value in place of a test score.

Depending on the context, it may make sense for you to ignore this observation prior to calculating the average score. It could also make sense for you to assign a value of "0" to this student's test score.

```{r}
students <- c("John", "Jane", "x")
scores <- c(1, 2, NA)
df <- data.frame(score = scores, student = students)

print(df)
```

## Mean Imputation
Come up with a data example where it makes sense to fill in blanks with an average (business logic where you claim or revert to average)
Alternatively perform median imputation (measure of central tendency)

## Multiple Imputation?

## Resources